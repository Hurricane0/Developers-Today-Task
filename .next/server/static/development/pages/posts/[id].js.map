{"version":3,"file":"static\\development\\pages\\posts\\[id].js","sources":["webpack:///webpack/bootstrap","webpack:///./api/api.ts","webpack:///./components/Loader.tsx","webpack:///./components/PostPage.tsx","webpack:///./containers/PostPageContainer.tsx","webpack:///./pages/posts/.tsx","webpack:///./src/actions/postsActions.ts","webpack:///external \"axios\"","webpack:///external \"lodash\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n  baseURL: \"https://simple-blog-api.crew.red/\"\r\n});\r\n\r\nexport const postsAPI = {\r\n  getPosts() {\r\n    return instance.get(`posts`).then((response: any) => response.data);\r\n  },\r\n  getComments(id: string) {\r\n    return instance\r\n      .get(`posts/${id}?_embed=comments`)\r\n      .then((response: any) => response.data.comments);\r\n  },\r\n  createPost(title: string, body: string) {\r\n    const data = JSON.stringify({\r\n      title: title,\r\n      body: body\r\n    });\r\n    return instance\r\n      .post(`posts`, data, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n      .then((response: any) => response);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 30px 0px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Wrapper className=\"d-flex justify-content-center\">\r\n    <div className=\"spinner-border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Paragraph = styled.p`\r\n  margin-bottom: 150px;\r\n  font-size: 24px;\r\n`;\r\nconst HeadComments = styled.h3`\r\n  margin-bottom: 20px;\r\n`;\r\nconst Title = styled.h3`\r\n  margin: 65px;\r\n`;\r\ntype Props = { title: string; body: string; comments: any[] };\r\n\r\nconst PostPage = ({ title, body, comments }: Props) => {\r\n  return (\r\n    <>\r\n      <Title className=\"text-center display-3\">{title}</Title>\r\n      <Paragraph className=\"lead text-justify\">{body}</Paragraph>\r\n\r\n      {comments && comments.length !== 0 ? (\r\n        <>\r\n          <HeadComments>Comments</HeadComments>\r\n          {comments.map(comment => (\r\n            <>\r\n              <p className=\"text-secondary\" key={comment.id}>\r\n                <img\r\n                  style={{ marginRight: \"10px\" }}\r\n                  height=\"40px\"\r\n                  src=\"https://pngimage.net/wp-content/uploads/2018/06/user-logo-png-4.png\"\r\n                  alt=\"user\"\r\n                />\r\n                {comment.body}\r\n              </p>\r\n              <div className=\"dropdown-divider\"></div>\r\n            </>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <h3 className=\"text-center\">No comments yet</h3>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PostPage from \"../components/PostPage\";\r\nimport _ from \"lodash\";\r\nimport { getPosts, getCurrentComments } from \"../src/actions/postsActions\";\r\nimport Loader from \"../components/Loader\";\r\n\r\ntype Props = {\r\n  id: number | string;\r\n  posts: any[];\r\n  getPosts: () => any[];\r\n  comments: any[];\r\n  getCurrentComments: (id: number | string) => any[];\r\n};\r\n\r\nconst PostPageContainer = ({\r\n  id,\r\n  posts,\r\n  getPosts,\r\n  comments,\r\n  getCurrentComments\r\n}: Props) => {\r\n  if (!posts) {\r\n    getPosts();\r\n    return <Loader />;\r\n  } else {\r\n    //Finding post matching to id from route query\r\n    getCurrentComments(id);\r\n    const post = _.find(posts, post => {\r\n      return post.id === Number(id);\r\n    });\r\n    return <PostPage title={post.title} body={post.body} comments={comments} />;\r\n  }\r\n};\r\nconst mapStateToProps = state => ({\r\n  posts: state.postsReducer.posts,\r\n  comments: state.postsReducer.currentComments\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts, getCurrentComments })(\r\n  PostPageContainer\r\n);\r\n","import { useRouter } from \"next/router\";\r\nimport PostPageContainer from \"../../containers/PostPageContainer\";\r\n\r\nexport default () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  return <PostPageContainer id={id} />;\r\n};\r\n","const SET_POSTS = \"posts/SET_POSTS\";\r\nconst SET_CURRENT_COMMENTS = \"posts/SET_CURRENT_COMMENTS\";\r\nconst SET_IS_FETCHING = \"posts/SET_IS_FETCHING\";\r\n\r\nimport { postsAPI } from \"../../api/api\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nconst setPosts = (posts: Array<Object>) => ({\r\n  type: SET_POSTS,\r\n  payload: posts\r\n});\r\n\r\nconst setCurrentComments = (comments: Array<Object>) => ({\r\n  type: SET_CURRENT_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\nconst setIsFetching = (isFetching: boolean) => ({\r\n  type: SET_IS_FETCHING,\r\n  payload: isFetching\r\n});\r\n\r\nexport const getPosts = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const response = await postsAPI.getPosts();\r\n    dispatch(setPosts(response));\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getCurrentComments = (id: string) => async (\r\n  dispatch: Dispatch\r\n) => {\r\n  const response = await postsAPI.getComments(id);\r\n  dispatch(setCurrentComments(response));\r\n};\r\n\r\nexport const createPost = (title: string, body: string) => async (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch(setIsFetching(true));\r\n  await postsAPI.createPost(title, body);\r\n  dispatch(setIsFetching(false));\r\n};\r\n","module.exports = require(\"axios\");","module.exports = require(\"lodash\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AADA;AADA;AAMA;AACA;AAtBA;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAEA;;;AAAA;AAIA;;AAAA;AAGA;;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1CA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}