{"version":3,"file":"static/webpack/static\\development\\pages\\posts\\new.js.cd789143db21897b48a1.hot-update.js","sources":["webpack:///./components/CreatePost.tsx"],"sourcesContent":["import Error from \"./FormErrors\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport cn from \"classnames\";\r\nimport styled from \"styled-components\";\r\nimport Router from \"next/router\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 30px;\r\n`;\r\n\r\n//Validation schema from Yup\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(1, \"Must have a character\")\r\n    .max(50, \"Must be shorter than 50\")\r\n    .required(\"Title is required\"),\r\n  body: Yup.string()\r\n    .min(1, \"Must have a character\")\r\n    .max(400, \"Must be shorter than 400\")\r\n    .required(\"Text is required\")\r\n});\r\n\r\nexport default ({ createPost }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center display-3\">Create your own post</h1>\r\n      <Wrapper>\r\n        <Formik\r\n          initialValues={{ title: \"\", body: \"\" }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            createPost(values.title, values.body);\r\n            Router.push(\"/\");\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Post title</label>\r\n                <input\r\n                  id=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={cn(\"form-control\", {\r\n                    \"is-invalid\": touched.title && errors.title,\r\n                    \"is-valid\": touched.title\r\n                  })}\r\n                />\r\n                <Error touched={touched.title} error={errors.title} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"body\">Post text</label>\r\n                <textarea\r\n                  id=\"body\"\r\n                  rows={3}\r\n                  value={values.body}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={cn(\"form-control\", {\r\n                    \"is-invalid\": touched.body && errors.body,\r\n                    \"is-valid\": touched.body && !errors.body\r\n                  })}\r\n                />\r\n                <Error touched={touched.body} error={errors.body} />\r\n              </div>\r\n\r\n              <button\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n                className=\"btn btn-dark\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\n// import React, { useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import Router from \"next/router\";\r\n\r\n// type InputEvent = React.ChangeEvent<HTMLInputElement>;\r\n// type FormEvent = React.FormEvent<HTMLFormElement>;\r\n// type Props = { createPost: Function; isFetching: boolean };\r\n\r\n// const Wrapper = styled.div`\r\n//   margin-top: 20px;\r\n// `;\r\n\r\n// const CreatePost = ({ createPost, isFetching }: Props) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n\r\n// const handleSubmit = (e: FormEvent): void => {\r\n//   e.preventDefault();\r\n\r\n//   if (title.trim && body.trim) {\r\n//     createPost(title, body);\r\n//     Router.push(\"/\");\r\n//   } else {\r\n//     console.log(\"Characters error\");\r\n//   }\r\n// };\r\n//   return (\r\n//     <>\r\n//       <h1 className=\"text-center display-3\">Create your own post</h1>\r\n//       <Wrapper>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label>Post title</label>\r\n//             <input\r\n//               value={title}\r\n//               onChange={(e: InputEvent) => setTitle(e.target.value)}\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               id=\"exampleInputEmail1\"\r\n//               aria-describedby=\"emailHelp\"\r\n//             />\r\n//             <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n//               Your title should be less than 70 characters\r\n//             </small>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label>Post text</label>\r\n//             <textarea\r\n//               value={body}\r\n//               onChange={e => setBody(e.target.value)}\r\n//               className=\"form-control\"\r\n//               id=\"exampleFormControlTextarea1\"\r\n//               rows={3}\r\n//             ></textarea>\r\n//           </div>\r\n//           <button disabled={isFetching} type=\"submit\" className=\"btn btn-dark\">\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </Wrapper>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default CreatePost;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAIA;AALA;AAWA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAqDA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}