{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nexport default function Catch(component, errorHandler) {\n  var _temp;\n\n  return _temp = class extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"state\", {\n        error: undefined\n      });\n    }\n\n    static getDerivedStateFromError(error) {\n      return {\n        error\n      };\n    }\n\n    componentDidCatch(error, info) {\n      if (errorHandler) {\n        errorHandler(error, info);\n      }\n    }\n\n    render() {\n      return component(this.props, this.state.error);\n    }\n\n  }, _temp;\n}","map":{"version":3,"sources":["C:/Users/user/Programming/Tasks/DevelopersToday/components/ErrorBoundary.ts"],"names":["React","Catch","component","errorHandler","Component","error","undefined","getDerivedStateFromError","componentDidCatch","info","render","props","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,eAAe,SAASC,KAAT,CACbC,SADa,EAEbC,YAFa,EAGe;AAAA;;AAC5B,iBAAO,cAAcH,KAAK,CAACI,SAApB,CAAiD;AAAA;AAAA;;AAAA,qCAClC;AAClBC,QAAAA,KAAK,EAAEC;AADW,OADkC;AAAA;;AAKtD,WAAOC,wBAAP,CAAgCF,KAAhC,EAA8C;AAC5C,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;;AAEDG,IAAAA,iBAAiB,CAACH,KAAD,EAAeI,IAAf,EAAsC;AACrD,UAAIN,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACE,KAAD,EAAQI,IAAR,CAAZ;AACD;AACF;;AAEDC,IAAAA,MAAM,GAAG;AACP,aAAOR,SAAS,CAAC,KAAKS,KAAN,EAAa,KAAKC,KAAL,CAAWP,KAAxB,CAAhB;AACD;;AAjBqD,GAAxD;AAmBD","sourcesContent":["import React from \"react\";\r\n\r\ntype ErrorHandler = (error: Error, info: React.ErrorInfo) => void;\r\ntype ErrorHandlingComponent<Props> = (\r\n  props: Props,\r\n  error?: Error\r\n) => React.ReactNode;\r\n\r\ntype ErrorState = { error?: Error };\r\n\r\nexport default function Catch<Props extends {}>(\r\n  component: ErrorHandlingComponent<Props>,\r\n  errorHandler?: ErrorHandler\r\n): React.ComponentType<Props> {\r\n  return class extends React.Component<Props, ErrorState> {\r\n    state: ErrorState = {\r\n      error: undefined\r\n    };\r\n\r\n    static getDerivedStateFromError(error: Error) {\r\n      return { error };\r\n    }\r\n\r\n    componentDidCatch(error: Error, info: React.ErrorInfo) {\r\n      if (errorHandler) {\r\n        errorHandler(error, info);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return component(this.props, this.state.error);\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}