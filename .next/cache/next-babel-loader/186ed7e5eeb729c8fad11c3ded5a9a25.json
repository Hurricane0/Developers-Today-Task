{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar SET_POSTS = \"posts/SET_POSTS\";\nvar SET_CURRENT_COMMENTS = \"posts/SET_CURRENT_COMMENTS\";\nimport { postsAPI } from \"../../api/api\";\n\nvar setPosts = function setPosts(posts) {\n  return {\n    type: SET_POSTS,\n    payload: posts\n  };\n};\n\nvar setCurrentComments = function setCurrentComments(comments) {\n  return {\n    type: SET_CURRENT_COMMENTS,\n    payload: comments\n  };\n};\n\nexport var getPosts = function getPosts() {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(postsAPI.getPosts());\n\n          case 3:\n            response = _context.sent;\n            dispatch(setPosts(response));\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var getCurrentComments = function getCurrentComments(id) {\n  return function _callee2(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(postsAPI.getComments(id));\n\n          case 2:\n            response = _context2.sent;\n            dispatch(setCurrentComments(response));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createPost = function createPost(title, body) {\n  return function _callee3(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(postsAPI.createPost(title, body));\n\n          case 2:\n            response = _context3.sent;\n            console.log(response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Programming/Tasks/DevelopersToday/src/actions/postsActions.js"],"names":["SET_POSTS","SET_CURRENT_COMMENTS","postsAPI","setPosts","posts","type","payload","setCurrentComments","comments","getPosts","dispatch","response","getCurrentComments","id","getComments","createPost","title","body","console","log"],"mappings":";AAAA,IAAMA,SAAS,GAAG,iBAAlB;AACA,IAAMC,oBAAoB,GAAG,4BAA7B;AAEA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AACzBC,IAAAA,IAAI,EAAEL,SADmB;AAEzBM,IAAAA,OAAO,EAAEF;AAFgB,GAAL;AAAA,CAAtB;;AAKA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCH,IAAAA,IAAI,EAAEJ,oBADgC;AAEtCK,IAAAA,OAAO,EAAEE;AAF6B,GAAL;AAAA,CAAnC;;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEHR,QAAQ,CAACO,QAAT,EAFG;;AAAA;AAEpBE,YAAAA,QAFoB;AAG1BD,YAAAA,QAAQ,CAACP,QAAQ,CAACQ,QAAD,CAAT,CAAR;AAH0B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAjB;AAOP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,EAAE;AAAA,SAAI,kBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACfR,QAAQ,CAACY,WAAT,CAAqBD,EAArB,CADe;;AAAA;AAChCF,YAAAA,QADgC;AAEtCD,YAAAA,QAAQ,CAACH,kBAAkB,CAACI,QAAD,CAAnB,CAAR;;AAFsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAJ;AAAA,CAA7B;AAKP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,IAAR;AAAA,SAAiB,kBAAMP,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAClBR,QAAQ,CAACa,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,CADkB;;AAAA;AACnCN,YAAAA,QADmC;AAEzCO,YAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;;AAFyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;AAAA,CAAnB","sourcesContent":["const SET_POSTS = \"posts/SET_POSTS\";\r\nconst SET_CURRENT_COMMENTS = \"posts/SET_CURRENT_COMMENTS\";\r\n\r\nimport { postsAPI } from \"../../api/api\";\r\n\r\nconst setPosts = posts => ({\r\n  type: SET_POSTS,\r\n  payload: posts\r\n});\r\n\r\nconst setCurrentComments = comments => ({\r\n  type: SET_CURRENT_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const response = await postsAPI.getPosts();\r\n    dispatch(setPosts(response));\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getCurrentComments = id => async dispatch => {\r\n  const response = await postsAPI.getComments(id);\r\n  dispatch(setCurrentComments(response));\r\n};\r\n\r\nexport const createPost = (title, body) => async dispatch => {\r\n  const response = await postsAPI.createPost(title, body);\r\n  console.log(response);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}