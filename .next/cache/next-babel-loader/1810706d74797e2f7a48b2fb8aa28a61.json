{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Programming\\\\Tasks\\\\DevelopersToday\\\\components\\\\CreatePost.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from \"./FormErrors\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport cn from \"classnames\";\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nconst Wrapper = styled.div`\n  margin-top: 20px;\n`; //Validation schema from Yup\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().min(1, \"Must have a character\").max(50, \"Must be shorter than 50\").required(\"Title is required\"),\n  body: Yup.string().min(1, \"Must have a character\").max(50, \"Must be shorter than 50\").required(\"Text is required\")\n});\nexport default (({\n  createPost\n}) => {\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Create your own post\"), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: \"\",\n      body: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      createPost(values.title, values.body);\n      Router.push(\"/\");\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Post title\"), __jsx(\"input\", {\n    id: \"title\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: cn(\"form-control\", {\n      \"is-invalid\": touched.title && errors.title,\n      \"is-valid\": touched.title\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(Error, {\n    touched: touched.title,\n    error: errors.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Post text\"), __jsx(\"input\", {\n    id: \"body\",\n    value: values.body,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: cn(\"form-control\", {\n      \"is-invalid\": touched.body && errors.body,\n      \"is-valid\": touched.body && !errors.body\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), __jsx(Error, {\n    touched: touched.body,\n    error: errors.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), __jsx(\"button\", {\n    disabled: isSubmitting,\n    type: \"submit\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n}); // import React, { useState } from \"react\";\n// import styled from \"styled-components\";\n// import Router from \"next/router\";\n// type InputEvent = React.ChangeEvent<HTMLInputElement>;\n// type FormEvent = React.FormEvent<HTMLFormElement>;\n// type Props = { createPost: Function; isFetching: boolean };\n// const Wrapper = styled.div`\n//   margin-top: 20px;\n// `;\n// const CreatePost = ({ createPost, isFetching }: Props) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n// const handleSubmit = (e: FormEvent): void => {\n//   e.preventDefault();\n//   if (title.trim && body.trim) {\n//     createPost(title, body);\n//     Router.push(\"/\");\n//   } else {\n//     console.log(\"Characters error\");\n//   }\n// };\n//   return (\n//     <>\n//       <h1 className=\"text-center display-3\">Create your own post</h1>\n//       <Wrapper>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Post title</label>\n//             <input\n//               value={title}\n//               onChange={(e: InputEvent) => setTitle(e.target.value)}\n//               type=\"text\"\n//               className=\"form-control\"\n//               id=\"exampleInputEmail1\"\n//               aria-describedby=\"emailHelp\"\n//             />\n//             <small id=\"emailHelp\" className=\"form-text text-muted\">\n//               Your title should be less than 70 characters\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <label>Post text</label>\n//             <textarea\n//               value={body}\n//               onChange={e => setBody(e.target.value)}\n//               className=\"form-control\"\n//               id=\"exampleFormControlTextarea1\"\n//               rows={3}\n//             ></textarea>\n//           </div>\n//           <button disabled={isFetching} type=\"submit\" className=\"btn btn-dark\">\n//             Submit\n//           </button>\n//         </form>\n//       </Wrapper>\n//     </>\n//   );\n// };\n// export default CreatePost;","map":{"version":3,"sources":["C:/Users/user/Programming/Tasks/DevelopersToday/components/CreatePost.tsx"],"names":["Error","Formik","Yup","cn","styled","Router","Wrapper","div","validationSchema","object","shape","title","string","min","max","required","body","createPost","values","setSubmitting","push","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import Error from \"./FormErrors\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport cn from \"classnames\";\r\nimport styled from \"styled-components\";\r\nimport Router from \"next/router\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\n//Validation schema from Yup\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(1, \"Must have a character\")\r\n    .max(50, \"Must be shorter than 50\")\r\n    .required(\"Title is required\"),\r\n  body: Yup.string()\r\n    .min(1, \"Must have a character\")\r\n    .max(50, \"Must be shorter than 50\")\r\n    .required(\"Text is required\")\r\n});\r\n\r\nexport default ({ createPost }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center display-3\">Create your own post</h1>\r\n      <Wrapper>\r\n        <Formik\r\n          initialValues={{ title: \"\", body: \"\" }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            createPost(values.title, values.body);\r\n            Router.push(\"/\");\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Post title</label>\r\n                <input\r\n                  id=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={cn(\"form-control\", {\r\n                    \"is-invalid\": touched.title && errors.title,\r\n                    \"is-valid\": touched.title\r\n                  })}\r\n                />\r\n                <Error touched={touched.title} error={errors.title} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"body\">Post text</label>\r\n                <input\r\n                  id=\"body\"\r\n                  value={values.body}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={cn(\"form-control\", {\r\n                    \"is-invalid\": touched.body && errors.body,\r\n                    \"is-valid\": touched.body && !errors.body\r\n                  })}\r\n                />\r\n                <Error touched={touched.body} error={errors.body} />\r\n              </div>\r\n\r\n              <button\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n                className=\"btn btn-dark\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\n// import React, { useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import Router from \"next/router\";\r\n\r\n// type InputEvent = React.ChangeEvent<HTMLInputElement>;\r\n// type FormEvent = React.FormEvent<HTMLFormElement>;\r\n// type Props = { createPost: Function; isFetching: boolean };\r\n\r\n// const Wrapper = styled.div`\r\n//   margin-top: 20px;\r\n// `;\r\n\r\n// const CreatePost = ({ createPost, isFetching }: Props) => {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n\r\n// const handleSubmit = (e: FormEvent): void => {\r\n//   e.preventDefault();\r\n\r\n//   if (title.trim && body.trim) {\r\n//     createPost(title, body);\r\n//     Router.push(\"/\");\r\n//   } else {\r\n//     console.log(\"Characters error\");\r\n//   }\r\n// };\r\n//   return (\r\n//     <>\r\n//       <h1 className=\"text-center display-3\">Create your own post</h1>\r\n//       <Wrapper>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label>Post title</label>\r\n//             <input\r\n//               value={title}\r\n//               onChange={(e: InputEvent) => setTitle(e.target.value)}\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               id=\"exampleInputEmail1\"\r\n//               aria-describedby=\"emailHelp\"\r\n//             />\r\n//             <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n//               Your title should be less than 70 characters\r\n//             </small>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label>Post text</label>\r\n//             <textarea\r\n//               value={body}\r\n//               onChange={e => setBody(e.target.value)}\r\n//               className=\"form-control\"\r\n//               id=\"exampleFormControlTextarea1\"\r\n//               rows={3}\r\n//             ></textarea>\r\n//           </div>\r\n//           <button disabled={isFetching} type=\"submit\" className=\"btn btn-dark\">\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </Wrapper>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}