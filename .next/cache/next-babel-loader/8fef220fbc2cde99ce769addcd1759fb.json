{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Programming\\\\Tasks\\\\DevelopersToday\\\\containers\\\\PostPageContainer.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PostPage from \"../components/PostPage\";\nimport _ from \"lodash\";\nimport { getPosts, getCurrentComments } from \"../src/actions/postsActions\";\nimport Loader from \"../components/Loader\";\n\nvar PostPageContainer = function PostPageContainer(_ref) {\n  var id = _ref.id,\n      posts = _ref.posts,\n      getPosts = _ref.getPosts,\n      comments = _ref.comments,\n      getCurrentComments = _ref.getCurrentComments;\n\n  if (!posts) {\n    getPosts();\n    return __jsx(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  } else {\n    //Finding post matching to id from route query\n    getCurrentComments(id);\n\n    var post = _.find(posts, function (post) {\n      return post.id === Number(id);\n    });\n\n    if (!post) {// return <Error />;\n    }\n\n    return __jsx(PostPage, {\n      title: post.title,\n      body: post.body,\n      comments: comments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.postsReducer.posts,\n    comments: state.postsReducer.currentComments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPosts: getPosts,\n  getCurrentComments: getCurrentComments\n})(PostPageContainer);","map":{"version":3,"sources":["C:/Users/user/Programming/Tasks/DevelopersToday/containers/PostPageContainer.tsx"],"names":["React","connect","PostPage","_","getPosts","getCurrentComments","Loader","PostPageContainer","id","posts","comments","post","find","Number","title","body","mapStateToProps","state","postsReducer","currentComments"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,6BAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAMpB;AAAA,MALJC,EAKI,QALJA,EAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJL,QAGI,QAHJA,QAGI;AAAA,MAFJM,QAEI,QAFJA,QAEI;AAAA,MADJL,kBACI,QADJA,kBACI;;AACJ,MAAI,CAACI,KAAL,EAAY;AACVL,IAAAA,QAAQ;AACR,WAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD,MAGO;AACL;AACAC,IAAAA,kBAAkB,CAACG,EAAD,CAAlB;;AACA,QAAMG,IAAI,GAAGR,CAAC,CAACS,IAAF,CAAOH,KAAP,EAAc,UAAAE,IAAI,EAAI;AACjC,aAAOA,IAAI,CAACH,EAAL,KAAYK,MAAM,CAACL,EAAD,CAAzB;AACD,KAFY,CAAb;;AAGA,QAAI,CAACG,IAAL,EAAW,CACT;AACD;;AACD,WAAO,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,IAAI,CAACG,KAAtB;AAA6B,MAAA,IAAI,EAAEH,IAAI,CAACI,IAAxC;AAA8C,MAAA,QAAQ,EAAEL,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CArBD;;AAsBA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCR,IAAAA,KAAK,EAAEQ,KAAK,CAACC,YAAN,CAAmBT,KADM;AAEhCC,IAAAA,QAAQ,EAAEO,KAAK,CAACC,YAAN,CAAmBC;AAFG,GAAL;AAAA,CAA7B;;AAKA,eAAelB,OAAO,CAACe,eAAD,EAAkB;AAAEZ,EAAAA,QAAQ,EAARA,QAAF;AAAYC,EAAAA,kBAAkB,EAAlBA;AAAZ,CAAlB,CAAP,CACbE,iBADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PostPage from \"../components/PostPage\";\r\nimport _ from \"lodash\";\r\nimport { getPosts, getCurrentComments } from \"../src/actions/postsActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/ErrorBoundary\";\r\n\r\nconst PostPageContainer = ({\r\n  id,\r\n  posts,\r\n  getPosts,\r\n  comments,\r\n  getCurrentComments\r\n}) => {\r\n  if (!posts) {\r\n    getPosts();\r\n    return <Loader />;\r\n  } else {\r\n    //Finding post matching to id from route query\r\n    getCurrentComments(id);\r\n    const post = _.find(posts, post => {\r\n      return post.id === Number(id);\r\n    });\r\n    if (!post) {\r\n      // return <Error />;\r\n    }\r\n    return <PostPage title={post.title} body={post.body} comments={comments} />;\r\n  }\r\n};\r\nconst mapStateToProps = state => ({\r\n  posts: state.postsReducer.posts,\r\n  comments: state.postsReducer.currentComments\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts, getCurrentComments })(\r\n  PostPageContainer\r\n);\r\n"]},"metadata":{},"sourceType":"module"}