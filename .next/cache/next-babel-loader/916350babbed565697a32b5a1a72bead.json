{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Programming\\\\Tasks\\\\DevelopersToday\\\\components\\\\Page.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport withRedux from \"next-redux-wrapper\";\nimport { createStore } from \"redux\";\n\nconst reducer = (state = {\n  foo: \"\"\n}, action) => {\n  switch (action.type) {\n    case \"FOO\":\n      return _objectSpread({}, state, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst makeStore = initialState => {\n  return createStore(reducer, initialState);\n};\n\nconst Page = ({\n  foo,\n  custom\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, \"Prop from Redux \", foo), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, \"Prop from getInitialProps \", custom));\n\nPage.getInitialProps = ({\n  store,\n  isServer,\n  pathname,\n  query\n}) => {\n  store.dispatch({\n    type: \"ADD\",\n    payload: \"foo\"\n  });\n  return {\n    custom: \"custom\"\n  };\n}; // здесь мы берем makeStore и отдаем его обертке\n\n\nPage = withRedux(makeStore, state => ({\n  foo: state.foo\n}))(Page);\nexport default Page;","map":{"version":3,"sources":["C:/Users/user/Programming/Tasks/DevelopersToday/components/Page.jsx"],"names":["withRedux","createStore","reducer","state","foo","action","type","payload","makeStore","initialState","Page","custom","getInitialProps","store","isServer","pathname","query","dispatch"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAT,EAAsBC,MAAtB,KAAiC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,+BAAYH,KAAZ;AAAmBC,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA/B;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMK,SAAS,GAAGC,YAAY,IAAI;AAChC,SAAOR,WAAW,CAACC,OAAD,EAAUO,YAAV,CAAlB;AACD,CAFD;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAAEN,EAAAA,GAAF;AAAOO,EAAAA;AAAP,CAAD,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsBP,GAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAgCO,MAAhC,CAFF,CADF;;AAOAD,IAAI,CAACE,eAAL,GAAuB,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAA0C;AAC/DH,EAAAA,KAAK,CAACI,QAAN,CAAe;AAAEX,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAf;AACA,SAAO;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAP;AACD,CAHD,C,CAKA;;;AACAD,IAAI,GAAGV,SAAS,CAACQ,SAAD,EAAYL,KAAK,KAAK;AAAEC,EAAAA,GAAG,EAAED,KAAK,CAACC;AAAb,CAAL,CAAjB,CAAT,CAAoDM,IAApD,CAAP;AAEA,eAAeA,IAAf","sourcesContent":["import withRedux from \"next-redux-wrapper\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst reducer = (state = { foo: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"FOO\":\r\n      return { ...state, foo: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst makeStore = initialState => {\r\n  return createStore(reducer, initialState);\r\n};\r\n\r\nconst Page = ({ foo, custom }) => (\r\n  <div>\r\n    <div>Prop from Redux {foo}</div>\r\n    <div>Prop from getInitialProps {custom}</div>\r\n  </div>\r\n);\r\n\r\nPage.getInitialProps = ({ store, isServer, pathname, query }) => {\r\n  store.dispatch({ type: \"ADD\", payload: \"foo\" });\r\n  return { custom: \"custom\" };\r\n};\r\n\r\n// здесь мы берем makeStore и отдаем его обертке\r\nPage = withRedux(makeStore, state => ({ foo: state.foo }))(Page);\r\n\r\nexport default Page;\r\n"]},"metadata":{},"sourceType":"module"}